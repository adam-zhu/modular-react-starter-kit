{"ast":null,"code":"import { call, put, takeEvery } from \"redux-saga/effects\";\nimport { createRootSaga, getSagaTriggers } from \"Lib/modules\";\nimport { getHomeData } from \"./services\";\nimport { createActionTypes } from \"./reducer\";\n\nconst fetchData = MODULE_KEY => function* ({\n  type,\n  payload\n}) {\n  const actionTypes = createActionTypes(MODULE_KEY);\n\n  try {\n    const data = yield call(getHomeData);\n    yield put({\n      type: actionTypes.SET_DATA,\n      payload: data\n    });\n  } catch (e) {\n    yield put({\n      type: actionTypes.SET_DATA,\n      payload: null\n    });\n  }\n};\n\nconst getSagaAttachments = MODULE_KEY => ({\n  fetchData: {\n    take: takeEvery,\n    trigger: `${MODULE_KEY}/ExampleModule/TRIGGER_fetchData`,\n    saga: fetchData(MODULE_KEY)\n  }\n});\n\nconst initModuleSagas = MODULE_KEY => {\n  const sagaAttachments = getSagaAttachments(MODULE_KEY);\n  return {\n    rootSaga: createRootSaga(sagaAttachments),\n    triggers: getSagaTriggers(sagaAttachments)\n  };\n};\n\nexport default initModuleSagas;","map":{"version":3,"sources":["/Users/adamzhu/Projects/architecture-sandbox/src/Routes/Home/sagas.js"],"names":["call","put","takeEvery","createRootSaga","getSagaTriggers","getHomeData","createActionTypes","fetchData","MODULE_KEY","type","payload","actionTypes","data","SET_DATA","e","getSagaAttachments","take","trigger","saga","initModuleSagas","sagaAttachments","rootSaga","triggers"],"mappings":"AAAA,SAASA,IAAT,EAAeC,GAAf,EAAoBC,SAApB,QAAqC,oBAArC;AACA,SAASC,cAAT,EAAyBC,eAAzB,QAAgD,aAAhD;AACA,SAASC,WAAT,QAA4B,YAA5B;AACA,SAASC,iBAAT,QAAkC,WAAlC;;AAEA,MAAMC,SAAS,GAAGC,UAAU,IAC1B,WAAU;AAAEC,EAAAA,IAAF;AAAQC,EAAAA;AAAR,CAAV,EAA6B;AAC3B,QAAMC,WAAW,GAAGL,iBAAiB,CAACE,UAAD,CAArC;;AAEA,MAAI;AACF,UAAMI,IAAI,GAAG,MAAMZ,IAAI,CAACK,WAAD,CAAvB;AAEA,UAAMJ,GAAG,CAAC;AAAEQ,MAAAA,IAAI,EAAEE,WAAW,CAACE,QAApB;AAA8BH,MAAAA,OAAO,EAAEE;AAAvC,KAAD,CAAT;AACD,GAJD,CAIE,OAAOE,CAAP,EAAU;AACV,UAAMb,GAAG,CAAC;AAAEQ,MAAAA,IAAI,EAAEE,WAAW,CAACE,QAApB;AAA8BH,MAAAA,OAAO,EAAE;AAAvC,KAAD,CAAT;AACD;AACF,CAXH;;AAaA,MAAMK,kBAAkB,GAAGP,UAAU,KAAK;AACxCD,EAAAA,SAAS,EAAE;AACTS,IAAAA,IAAI,EAAEd,SADG;AAETe,IAAAA,OAAO,EAAG,GAAET,UAAW,kCAFd;AAGTU,IAAAA,IAAI,EAAEX,SAAS,CAACC,UAAD;AAHN;AAD6B,CAAL,CAArC;;AAQA,MAAMW,eAAe,GAAGX,UAAU,IAAI;AACpC,QAAMY,eAAe,GAAGL,kBAAkB,CAACP,UAAD,CAA1C;AAEA,SAAO;AACLa,IAAAA,QAAQ,EAAElB,cAAc,CAACiB,eAAD,CADnB;AAELE,IAAAA,QAAQ,EAAElB,eAAe,CAACgB,eAAD;AAFpB,GAAP;AAID,CAPD;;AASA,eAAeD,eAAf","sourcesContent":["import { call, put, takeEvery } from \"redux-saga/effects\";\nimport { createRootSaga, getSagaTriggers } from \"Lib/modules\";\nimport { getHomeData } from \"./services\";\nimport { createActionTypes } from \"./reducer\";\n\nconst fetchData = MODULE_KEY =>\n  function*({ type, payload }) {\n    const actionTypes = createActionTypes(MODULE_KEY);\n\n    try {\n      const data = yield call(getHomeData);\n\n      yield put({ type: actionTypes.SET_DATA, payload: data });\n    } catch (e) {\n      yield put({ type: actionTypes.SET_DATA, payload: null });\n    }\n  };\n\nconst getSagaAttachments = MODULE_KEY => ({\n  fetchData: {\n    take: takeEvery,\n    trigger: `${MODULE_KEY}/ExampleModule/TRIGGER_fetchData`,\n    saga: fetchData(MODULE_KEY)\n  }\n});\n\nconst initModuleSagas = MODULE_KEY => {\n  const sagaAttachments = getSagaAttachments(MODULE_KEY);\n\n  return {\n    rootSaga: createRootSaga(sagaAttachments),\n    triggers: getSagaTriggers(sagaAttachments)\n  };\n};\n\nexport default initModuleSagas;\n"]},"metadata":{},"sourceType":"module"}