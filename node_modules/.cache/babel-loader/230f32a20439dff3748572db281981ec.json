{"ast":null,"code":"var _jsxFileName = \"/Users/adamzhu/Projects/architecture-sandbox/src/Lib/modules.js\";\nimport React from \"react\";\nimport { DynamicModuleLoader } from \"redux-dynamic-modules-react\";\nimport { all, spawn } from \"redux-saga/effects\";\nimport { createSelector } from \"reselect\";\nexport const DynamicModule = ({\n  MODULE_KEY,\n  ModuleRootComponent,\n  ModuleRootReducer,\n  ModuleRootSaga,\n  onLoadActions,\n  onUnloadActions,\n  children,\n  ...props\n}) => {\n  const moduleConfig = {\n    id: MODULE_KEY,\n    reducerMap: {\n      [MODULE_KEY]: ModuleRootReducer\n    },\n    sagas: [ModuleRootSaga],\n    initialActions: onLoadActions,\n    finalActions: onUnloadActions\n  };\n  return React.createElement(DynamicModuleLoader, {\n    modules: [moduleConfig],\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 27\n    },\n    __self: this\n  }, React.createElement(ModuleRootComponent, Object.assign({}, props, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 28\n    },\n    __self: this\n  }), children));\n};\n\nconst attachSagaListener = ({\n  take,\n  trigger,\n  saga\n}) => {\n  return spawn(function* () {\n    yield take(trigger, saga);\n  });\n};\n\nexport const createRootSaga = sagaAttachments => {\n  const sagaListeners = Object.values(sagaAttachments);\n  return function* () {\n    yield all(sagaListeners.map(attachSagaListener));\n  };\n};\nexport const getSagaTriggers = sagaAttachments => Object.fromEntries(Object.entries(sagaAttachments).map(([key, {\n  take,\n  trigger,\n  saga\n}]) => [key, trigger]));\nexport const createModuleSelector = (MODULE_KEY, ...selectors) => createSelector(rootState => rootState[MODULE_KEY], ...selectors);","map":{"version":3,"sources":["/Users/adamzhu/Projects/architecture-sandbox/src/Lib/modules.js"],"names":["React","DynamicModuleLoader","all","spawn","createSelector","DynamicModule","MODULE_KEY","ModuleRootComponent","ModuleRootReducer","ModuleRootSaga","onLoadActions","onUnloadActions","children","props","moduleConfig","id","reducerMap","sagas","initialActions","finalActions","attachSagaListener","take","trigger","saga","createRootSaga","sagaAttachments","sagaListeners","Object","values","map","getSagaTriggers","fromEntries","entries","key","createModuleSelector","selectors","rootState"],"mappings":";AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,SAASC,mBAAT,QAAoC,6BAApC;AACA,SAASC,GAAT,EAAcC,KAAd,QAA2B,oBAA3B;AACA,SAASC,cAAT,QAA+B,UAA/B;AAEA,OAAO,MAAMC,aAAa,GAAG,CAAC;AAC5BC,EAAAA,UAD4B;AAE5BC,EAAAA,mBAF4B;AAG5BC,EAAAA,iBAH4B;AAI5BC,EAAAA,cAJ4B;AAK5BC,EAAAA,aAL4B;AAM5BC,EAAAA,eAN4B;AAO5BC,EAAAA,QAP4B;AAQ5B,KAAGC;AARyB,CAAD,KASvB;AACJ,QAAMC,YAAY,GAAG;AACnBC,IAAAA,EAAE,EAAET,UADe;AAEnBU,IAAAA,UAAU,EAAE;AACV,OAACV,UAAD,GAAcE;AADJ,KAFO;AAKnBS,IAAAA,KAAK,EAAE,CAACR,cAAD,CALY;AAMnBS,IAAAA,cAAc,EAAER,aANG;AAOnBS,IAAAA,YAAY,EAAER;AAPK,GAArB;AAUA,SACE,oBAAC,mBAAD;AAAqB,IAAA,OAAO,EAAE,CAACG,YAAD,CAA9B;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACE,oBAAC,mBAAD,oBAAyBD,KAAzB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MAAiCD,QAAjC,CADF,CADF;AAKD,CAzBM;;AA2BP,MAAMQ,kBAAkB,GAAG,CAAC;AAAEC,EAAAA,IAAF;AAAQC,EAAAA,OAAR;AAAiBC,EAAAA;AAAjB,CAAD,KAA6B;AACtD,SAAOpB,KAAK,CAAC,aAAY;AACvB,UAAMkB,IAAI,CAACC,OAAD,EAAUC,IAAV,CAAV;AACD,GAFW,CAAZ;AAGD,CAJD;;AAMA,OAAO,MAAMC,cAAc,GAAGC,eAAe,IAAI;AAC/C,QAAMC,aAAa,GAAGC,MAAM,CAACC,MAAP,CAAcH,eAAd,CAAtB;AAEA,SAAO,aAAY;AACjB,UAAMvB,GAAG,CAACwB,aAAa,CAACG,GAAd,CAAkBT,kBAAlB,CAAD,CAAT;AACD,GAFD;AAGD,CANM;AAQP,OAAO,MAAMU,eAAe,GAAGL,eAAe,IAC5CE,MAAM,CAACI,WAAP,CACEJ,MAAM,CAACK,OAAP,CAAeP,eAAf,EAAgCI,GAAhC,CAAoC,CAAC,CAACI,GAAD,EAAM;AAAEZ,EAAAA,IAAF;AAAQC,EAAAA,OAAR;AAAiBC,EAAAA;AAAjB,CAAN,CAAD,KAAoC,CACtEU,GADsE,EAEtEX,OAFsE,CAAxE,CADF,CADK;AAQP,OAAO,MAAMY,oBAAoB,GAAG,CAAC5B,UAAD,EAAa,GAAG6B,SAAhB,KAClC/B,cAAc,CAACgC,SAAS,IAAIA,SAAS,CAAC9B,UAAD,CAAvB,EAAqC,GAAG6B,SAAxC,CADT","sourcesContent":["import React from \"react\";\nimport { DynamicModuleLoader } from \"redux-dynamic-modules-react\";\nimport { all, spawn } from \"redux-saga/effects\";\nimport { createSelector } from \"reselect\";\n\nexport const DynamicModule = ({\n  MODULE_KEY,\n  ModuleRootComponent,\n  ModuleRootReducer,\n  ModuleRootSaga,\n  onLoadActions,\n  onUnloadActions,\n  children,\n  ...props\n}) => {\n  const moduleConfig = {\n    id: MODULE_KEY,\n    reducerMap: {\n      [MODULE_KEY]: ModuleRootReducer\n    },\n    sagas: [ModuleRootSaga],\n    initialActions: onLoadActions,\n    finalActions: onUnloadActions\n  };\n\n  return (\n    <DynamicModuleLoader modules={[moduleConfig]}>\n      <ModuleRootComponent {...props}>{children}</ModuleRootComponent>\n    </DynamicModuleLoader>\n  );\n};\n\nconst attachSagaListener = ({ take, trigger, saga }) => {\n  return spawn(function*() {\n    yield take(trigger, saga);\n  });\n};\n\nexport const createRootSaga = sagaAttachments => {\n  const sagaListeners = Object.values(sagaAttachments);\n\n  return function*() {\n    yield all(sagaListeners.map(attachSagaListener));\n  };\n};\n\nexport const getSagaTriggers = sagaAttachments =>\n  Object.fromEntries(\n    Object.entries(sagaAttachments).map(([key, { take, trigger, saga }]) => [\n      key,\n      trigger\n    ])\n  );\n\nexport const createModuleSelector = (MODULE_KEY, ...selectors) =>\n  createSelector(rootState => rootState[MODULE_KEY], ...selectors);\n"]},"metadata":{},"sourceType":"module"}