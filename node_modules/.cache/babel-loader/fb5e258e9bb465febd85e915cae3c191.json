{"ast":null,"code":"import { applyMiddleware } from \"redux\";\nimport { createStore as createDynamicStore } from \"redux-dynamic-modules\";\nimport { getSagaExtension } from \"redux-dynamic-modules-saga\";\nimport monitorReducersEnhancer from \"./enhancers/monitorReducers\";\nimport loggerMiddleware from \"./middleware/logger\";\nexport default function configureStore(preloadedState) {\n  const generate_middlewares = () => {\n    if (process.env.NODE_ENV !== \"production\") {\n      return [loggerMiddleware];\n    }\n\n    return [];\n  };\n\n  const middlewares = generate_middlewares();\n  const middlewareEnhancer = applyMiddleware(...middlewares);\n\n  const generate_enhancers = () => {\n    if (process.env.NODE_ENV !== \"production\") {\n      return [middlewareEnhancer, monitorReducersEnhancer];\n    }\n\n    return [middlewareEnhancer];\n  };\n\n  return createDynamicStore({\n    initialState: preloadedState,\n    enhancements: [generate_enhancers()],\n    extensions: [getSagaExtension()]\n  });\n}","map":{"version":3,"sources":["/Users/adamzhu/Projects/architecture-sandbox/src/Store/index.js"],"names":["applyMiddleware","createStore","createDynamicStore","getSagaExtension","monitorReducersEnhancer","loggerMiddleware","configureStore","preloadedState","generate_middlewares","process","env","NODE_ENV","middlewares","middlewareEnhancer","generate_enhancers","initialState","enhancements","extensions"],"mappings":"AAAA,SAASA,eAAT,QAAgC,OAAhC;AACA,SAASC,WAAW,IAAIC,kBAAxB,QAAkD,uBAAlD;AACA,SAASC,gBAAT,QAAiC,4BAAjC;AAEA,OAAOC,uBAAP,MAAoC,6BAApC;AACA,OAAOC,gBAAP,MAA6B,qBAA7B;AAEA,eAAe,SAASC,cAAT,CAAwBC,cAAxB,EAAwC;AACrD,QAAMC,oBAAoB,GAAG,MAAM;AACjC,QAAIC,OAAO,CAACC,GAAR,CAAYC,QAAZ,KAAyB,YAA7B,EAA2C;AACzC,aAAO,CAACN,gBAAD,CAAP;AACD;;AAED,WAAO,EAAP;AACD,GAND;;AAOA,QAAMO,WAAW,GAAGJ,oBAAoB,EAAxC;AACA,QAAMK,kBAAkB,GAAGb,eAAe,CAAC,GAAGY,WAAJ,CAA1C;;AAEA,QAAME,kBAAkB,GAAG,MAAM;AAC/B,QAAIL,OAAO,CAACC,GAAR,CAAYC,QAAZ,KAAyB,YAA7B,EAA2C;AACzC,aAAO,CAACE,kBAAD,EAAqBT,uBAArB,CAAP;AACD;;AAED,WAAO,CAACS,kBAAD,CAAP;AACD,GAND;;AAQA,SAAOX,kBAAkB,CAAC;AACxBa,IAAAA,YAAY,EAAER,cADU;AAExBS,IAAAA,YAAY,EAAE,CAACF,kBAAkB,EAAnB,CAFU;AAGxBG,IAAAA,UAAU,EAAE,CAACd,gBAAgB,EAAjB;AAHY,GAAD,CAAzB;AAKD","sourcesContent":["import { applyMiddleware } from \"redux\";\nimport { createStore as createDynamicStore } from \"redux-dynamic-modules\";\nimport { getSagaExtension } from \"redux-dynamic-modules-saga\";\n\nimport monitorReducersEnhancer from \"./enhancers/monitorReducers\";\nimport loggerMiddleware from \"./middleware/logger\";\n\nexport default function configureStore(preloadedState) {\n  const generate_middlewares = () => {\n    if (process.env.NODE_ENV !== \"production\") {\n      return [loggerMiddleware];\n    }\n\n    return [];\n  };\n  const middlewares = generate_middlewares();\n  const middlewareEnhancer = applyMiddleware(...middlewares);\n\n  const generate_enhancers = () => {\n    if (process.env.NODE_ENV !== \"production\") {\n      return [middlewareEnhancer, monitorReducersEnhancer];\n    }\n\n    return [middlewareEnhancer];\n  };\n\n  return createDynamicStore({\n    initialState: preloadedState,\n    enhancements: [generate_enhancers()],\n    extensions: [getSagaExtension()]\n  });\n}\n"]},"metadata":{},"sourceType":"module"}