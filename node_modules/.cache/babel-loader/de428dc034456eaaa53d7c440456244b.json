{"ast":null,"code":"import { call, put, takeEvery } from \"redux-saga/effects\";\nimport { createRootSaga, getSagaTriggers } from \"Lib/modules\";\nimport { getUser, getUserDetails } from \"./services\";\nimport { createActionTypes } from \"./reducer\";\n\nconst fetchUser = MODULE_KEY => function* ({\n  type,\n  payload\n}) {\n  const actionTypes = createActionTypes(MODULE_KEY);\n  const triggers = getSagaTriggers(getSagaAttachments(MODULE_KEY));\n\n  try {\n    const user = yield call(getUser);\n    yield put({\n      type: actionTypes.SET_USER,\n      payload: user\n    });\n    yield put({\n      type: triggers.fetchUserDetails,\n      payload: {\n        id: user.id\n      }\n    });\n  } catch (e) {\n    yield put({\n      type: actionTypes.SET_USER,\n      payload: null\n    });\n  }\n};\n\nconst fetchUserDetails = MODULE_KEY => function* ({\n  type,\n  payload\n}) {\n  const {\n    id\n  } = payload; // user id for\n\n  const actionTypes = createActionTypes(MODULE_KEY);\n\n  try {\n    const userDetails = yield call(getUserDetails, {\n      id\n    });\n    yield put({\n      type: actionTypes.SET_USER_DETAILS,\n      payload: userDetails\n    });\n  } catch (e) {\n    yield put({\n      type: actionTypes.SET_USER_DETAILS,\n      payload: null\n    });\n  }\n};\n\nconst getSagaAttachments = MODULE_KEY => ({\n  fetchUser: {\n    take: takeEvery,\n    trigger: `${MODULE_KEY}/AppShell/TRIGGER_fetchUser`,\n    saga: fetchUser(MODULE_KEY)\n  },\n  fetchUserDetails: {\n    take: takeEvery,\n    trigger: `${MODULE_KEY}/AppShell/TRIGGER_fetchUserDetails`,\n    saga: fetchUserDetails(MODULE_KEY)\n  }\n});\n\nconst initModuleSagas = MODULE_KEY => {\n  const sagaAttachments = getSagaAttachments(MODULE_KEY);\n  return {\n    rootSaga: createRootSaga(sagaAttachments),\n    triggers: getSagaTriggers(sagaAttachments)\n  };\n};\n\nexport default initModuleSagas;","map":{"version":3,"sources":["/Users/adamzhu/Projects/architecture-sandbox/src/AppShell/sagas.js"],"names":["call","put","takeEvery","createRootSaga","getSagaTriggers","getUser","getUserDetails","createActionTypes","fetchUser","MODULE_KEY","type","payload","actionTypes","triggers","getSagaAttachments","user","SET_USER","fetchUserDetails","id","e","userDetails","SET_USER_DETAILS","take","trigger","saga","initModuleSagas","sagaAttachments","rootSaga"],"mappings":"AAAA,SAASA,IAAT,EAAeC,GAAf,EAAoBC,SAApB,QAAqC,oBAArC;AACA,SAASC,cAAT,EAAyBC,eAAzB,QAAgD,aAAhD;AACA,SAASC,OAAT,EAAkBC,cAAlB,QAAwC,YAAxC;AACA,SAASC,iBAAT,QAAkC,WAAlC;;AAEA,MAAMC,SAAS,GAAGC,UAAU,IAC1B,WAAU;AAAEC,EAAAA,IAAF;AAAQC,EAAAA;AAAR,CAAV,EAA6B;AAC3B,QAAMC,WAAW,GAAGL,iBAAiB,CAACE,UAAD,CAArC;AACA,QAAMI,QAAQ,GAAGT,eAAe,CAACU,kBAAkB,CAACL,UAAD,CAAnB,CAAhC;;AAEA,MAAI;AACF,UAAMM,IAAI,GAAG,MAAMf,IAAI,CAACK,OAAD,CAAvB;AAEA,UAAMJ,GAAG,CAAC;AAAES,MAAAA,IAAI,EAAEE,WAAW,CAACI,QAApB;AAA8BL,MAAAA,OAAO,EAAEI;AAAvC,KAAD,CAAT;AACA,UAAMd,GAAG,CAAC;AACRS,MAAAA,IAAI,EAAEG,QAAQ,CAACI,gBADP;AAERN,MAAAA,OAAO,EAAE;AAAEO,QAAAA,EAAE,EAAEH,IAAI,CAACG;AAAX;AAFD,KAAD,CAAT;AAID,GARD,CAQE,OAAOC,CAAP,EAAU;AACV,UAAMlB,GAAG,CAAC;AAAES,MAAAA,IAAI,EAAEE,WAAW,CAACI,QAApB;AAA8BL,MAAAA,OAAO,EAAE;AAAvC,KAAD,CAAT;AACD;AACF,CAhBH;;AAkBA,MAAMM,gBAAgB,GAAGR,UAAU,IACjC,WAAU;AAAEC,EAAAA,IAAF;AAAQC,EAAAA;AAAR,CAAV,EAA6B;AAC3B,QAAM;AAAEO,IAAAA;AAAF,MAASP,OAAf,CAD2B,CACH;;AACxB,QAAMC,WAAW,GAAGL,iBAAiB,CAACE,UAAD,CAArC;;AAEA,MAAI;AACF,UAAMW,WAAW,GAAG,MAAMpB,IAAI,CAACM,cAAD,EAAiB;AAAEY,MAAAA;AAAF,KAAjB,CAA9B;AAEA,UAAMjB,GAAG,CAAC;AAAES,MAAAA,IAAI,EAAEE,WAAW,CAACS,gBAApB;AAAsCV,MAAAA,OAAO,EAAES;AAA/C,KAAD,CAAT;AACD,GAJD,CAIE,OAAOD,CAAP,EAAU;AACV,UAAMlB,GAAG,CAAC;AAAES,MAAAA,IAAI,EAAEE,WAAW,CAACS,gBAApB;AAAsCV,MAAAA,OAAO,EAAE;AAA/C,KAAD,CAAT;AACD;AACF,CAZH;;AAcA,MAAMG,kBAAkB,GAAGL,UAAU,KAAK;AACxCD,EAAAA,SAAS,EAAE;AACTc,IAAAA,IAAI,EAAEpB,SADG;AAETqB,IAAAA,OAAO,EAAG,GAAEd,UAAW,6BAFd;AAGTe,IAAAA,IAAI,EAAEhB,SAAS,CAACC,UAAD;AAHN,GAD6B;AAMxCQ,EAAAA,gBAAgB,EAAE;AAChBK,IAAAA,IAAI,EAAEpB,SADU;AAEhBqB,IAAAA,OAAO,EAAG,GAAEd,UAAW,oCAFP;AAGhBe,IAAAA,IAAI,EAAEP,gBAAgB,CAACR,UAAD;AAHN;AANsB,CAAL,CAArC;;AAaA,MAAMgB,eAAe,GAAGhB,UAAU,IAAI;AACpC,QAAMiB,eAAe,GAAGZ,kBAAkB,CAACL,UAAD,CAA1C;AAEA,SAAO;AACLkB,IAAAA,QAAQ,EAAExB,cAAc,CAACuB,eAAD,CADnB;AAELb,IAAAA,QAAQ,EAAET,eAAe,CAACsB,eAAD;AAFpB,GAAP;AAID,CAPD;;AASA,eAAeD,eAAf","sourcesContent":["import { call, put, takeEvery } from \"redux-saga/effects\";\nimport { createRootSaga, getSagaTriggers } from \"Lib/modules\";\nimport { getUser, getUserDetails } from \"./services\";\nimport { createActionTypes } from \"./reducer\";\n\nconst fetchUser = MODULE_KEY =>\n  function*({ type, payload }) {\n    const actionTypes = createActionTypes(MODULE_KEY);\n    const triggers = getSagaTriggers(getSagaAttachments(MODULE_KEY));\n\n    try {\n      const user = yield call(getUser);\n\n      yield put({ type: actionTypes.SET_USER, payload: user });\n      yield put({\n        type: triggers.fetchUserDetails,\n        payload: { id: user.id }\n      });\n    } catch (e) {\n      yield put({ type: actionTypes.SET_USER, payload: null });\n    }\n  };\n\nconst fetchUserDetails = MODULE_KEY =>\n  function*({ type, payload }) {\n    const { id } = payload; // user id for\n    const actionTypes = createActionTypes(MODULE_KEY);\n\n    try {\n      const userDetails = yield call(getUserDetails, { id });\n\n      yield put({ type: actionTypes.SET_USER_DETAILS, payload: userDetails });\n    } catch (e) {\n      yield put({ type: actionTypes.SET_USER_DETAILS, payload: null });\n    }\n  };\n\nconst getSagaAttachments = MODULE_KEY => ({\n  fetchUser: {\n    take: takeEvery,\n    trigger: `${MODULE_KEY}/AppShell/TRIGGER_fetchUser`,\n    saga: fetchUser(MODULE_KEY)\n  },\n  fetchUserDetails: {\n    take: takeEvery,\n    trigger: `${MODULE_KEY}/AppShell/TRIGGER_fetchUserDetails`,\n    saga: fetchUserDetails(MODULE_KEY)\n  }\n});\n\nconst initModuleSagas = MODULE_KEY => {\n  const sagaAttachments = getSagaAttachments(MODULE_KEY);\n\n  return {\n    rootSaga: createRootSaga(sagaAttachments),\n    triggers: getSagaTriggers(sagaAttachments)\n  };\n};\n\nexport default initModuleSagas;\n"]},"metadata":{},"sourceType":"module"}